import { kv } from '@vercel/kv';
export default async function handler(request, response) { try { const userKeys = []; for await (const key of kv.scanIterator({ match: 'user:*' })) { userKeys.push(key); } if (userKeys.length === 0) return response.status(200).json({ totalUsers: 0, users: [], roleCounts: {} }); const users = await kv.mget(...userKeys); const roleCounts = { free: 0, member: 0, admin: 0 }; const sanitizedUsers = users.map(user => { if(user && user.role) roleCounts[user.role]++; return { username: user.username, email: user.email, role: user.role || 'free' }; }); return response.status(200).json({ totalUsers: sanitizedUsers.length, users: sanitizedUsers, roleCounts: roleCounts }); } catch (error) { console.error("Dashboard data error:", error); return response.status(500).json({ message: "Failed to fetch dashboard data." }); } } 