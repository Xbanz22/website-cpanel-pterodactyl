export default async function handler(request, response) { if (request.method !== 'POST') return response.status(405).end(); const { PTERO_DOMAIN, PTERO_ADMIN_API_KEY } = process.env; const { serverId } = request.body; if (!serverId) return response.status(400).json({ message: "Server ID is required." }); try { const pteroResponse = await fetch(`${PTERO_DOMAIN}/api/application/servers/${serverId}`, { method: 'DELETE', headers: { 'Authorization': `Bearer ${PTERO_ADMIN_API_KEY}` } }); if (pteroResponse.status === 204) { return response.status(200).json({ message: `Server ID ${serverId} successfully deleted.` }); } else { throw new Error(`Failed to delete server. Status: ${pteroResponse.status}`); } } catch (error) { return response.status(500).json({ message: error.message }); } } 